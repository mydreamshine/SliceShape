커맨드
q: 프로그램 종료
c: 초기화 후 새로운 도형 한개 생성
SpaceBar: 연속해서 새로운 도형 한개 생성
a: 바구니 왼쪽 이동
d: 바구니 오른쪽 이동

마우스 드래그: 도형 자르기
	       (천천히 드래그하면 안 잘립니다. 드래그 라인이 줄어드는 속도보다 빠르게 드래그해야 합니다.)
	       연속자르기 Tip: 한번 드래그 하고 나서, 마우스버튼을 때고 다시 드래그하면 빨리 잘립니다.
			       전체화면에서 하면 훨씬 쉽습니다.


추가 구현사항
- 2d 물리(충돌처리 및 회전 동역학 불안정)
- 연속 자르기
- 간단한 UI/UX
- 알파블렌딩


미구현 부분
- 다각형들 간의 충돌처리(회전 동역학 코드가 보완되어야 구현 가능)
- 타이틀 장면

미흡한 부분
- 충돌처리, 회전 동역학


###############################################################Code설명###############################################################
add_DataType.h:
		좀 더 효율적인 코드를 위해 제 나름대로 만든 자료형들입니다.
		(RECT_f, CUBE_f, COLORREF_f 등)


D3PointList.h,
D3PointList.cpp:
		정점을 환형 연결리스트로 관리하기 위한 코드입니다.
		정점의 연결을 변경하는 부분이 도형을 자르는 기본 원리입니다.
		(※ D3PointList.cpp의 Line 179 void LIST_D3POINT::Split()부분)
		D3PointList.cpp의 Line 278 ~ 311: 두 직선의 교점을 구하는 부분입니다.(이 프로그램의 핵심원리입니다.)
		D3PointList.cpp의 Line 314 ~ 327: 점과 직선의 거리를 이용해서 충돌처리 및 물리작용에 활용됩니다.


Game_info.cpp:
	       콤보에 관한 정보를 다루는 코드입니다.
	       (10x Combo: Good!, 20x Combo: Great!, 30x Over Combo: Exelent!)


INPUT-OUTPUT.h,
INPUT-OUTPUT.cpp:
		 전반적인 입출력을 관리합니다.
		 도형 생성, 바구니 이동, 콤보 Text 이동 등
		 (도움말, 드래그라인, 도형, 바구니, 물, 콤보 등의 출력)

ReducedLine.cpp:
		드래그 라인의 정의부분입니다.
		시작점과 끝점을 연결하여, 타이머가 호출될 때마다 시작점을 끝점으로 이동시킵니다.
		※ 드래그 라인의 잔상
		   시작점부터 끝점까지 원을 나열하고
		   타이머가 호출될 때마다 점점 커지면서 흰색에서 검은색으로 바뀝니다.(원 100개)

Shape_Polygon.h,
Shape_Polygon.cpp:
		  정점의 환형연결리스트를 Vertex로 갖는 도형 객체에 대한 정의입니다.
		  (가장 핵심적인 코드입니다.)
		  ① 도형의 회전, 이동, 확대축소를 비롯한 (Shape_Polygon.cpp의 Line 139 ~ 296)
		  ② 다각형의 면적 및 무게중심 (Shape_Polygon.cpp의 Line 39 ~ 95)
		  ③ 다각형 자르기(교점 갯수로 판단) (Shape_Polygon.cpp의 Line 320 ~ 358)
		  ④ 다각형과 선분과의 충돌처리 (Shape_Polygon.cpp의 Line 375 ~ 552) (※ 회전운동과 충돌처리가 불안정합니다.)
		  ⑤ 다각형의 클리핑 영역 그리기(교점으로 판단후 알파블렌딩 적용) (Shape_Polygon.cpp의 Line 561 ~ 607)

ShapeList.h,
ShapeList.cpp:
	      다각형을 생성하고, 생성된 각 다각형들을 연결리스트로 관리합니다.

#####################################################################################################################################